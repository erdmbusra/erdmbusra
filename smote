import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from imblearn.over_sampling import SMOTE
from collections import Counter

# CSV dosyasını okuma
file_path = r'C:\Users\Lenovo\Desktop\model\anaveriseti\1milyon_null_temiz - Kopya.csv'
data = pd.read_csv(file_path, header=None, names=['label', 'text'])

# Boş değerleri kontrol etme
print("Eksik değerlerin sayısını kontrol etme:")
print(data.isnull().sum())

# Boş değerleri içeren satırları görüntüleme
print("\nEksik değerler içeren satırlar:")
print(data[data.isnull().any(axis=1)])

# Eksik değerleri kaldırma
data.dropna(subset=['text'], inplace=True)

# Etiketlerin veri türünü string yapma
data['label'] = data['label'].astype(str)

# Her sınıfın örnek sayısını kontrol etme
print("\nHer sınıfın örnek sayısı:")
print(data['label'].value_counts())

# Çok az örneğe sahip sınıfları kaldırma veya birleştirme (isteğe bağlı)
# Örneğin, 1'den az örneğe sahip sınıfları kaldırma
min_samples = 6
data = data.groupby('label').filter(lambda x: len(x) >= min_samples)

# Temizlenmiş veri kümesinin sınıf dağılımını tekrar kontrol etme
print("\nTemizlenmiş veri kümesinin sınıf dağılımı:")
print(data['label'].value_counts())

# Etiketleri ve metinleri ayırma
X = data['text']
y = data['label']

# Metin verilerini vektörleştirme (TF-IDF kullanarak)
vectorizer = TfidfVectorizer()
X_vect = vectorizer.fit_transform(X)

# SMOTE uygulama
smt = SMOTE()
X_res, y_res = smt.fit_resample(X_vect, y)

# Sonuçları kontrol etme
counter_before = Counter(y)
counter_after = Counter(y_res)

print('Before:', counter_before)
print('After:', counter_after)

# X_res'i yeniden orijinal metin formatına dönüştürme
X_res_text = vectorizer.inverse_transform(X_res)
X_res_text = [' '.join(text) for text in X_res_text]

# Yeniden örneklenen veri setini bir DataFrame'e dönüştürme
resampled_data = pd.DataFrame({'label': y_res, 'text': X_res_text})

# Yeni dosya yolunu belirleme
new_file_path = r'C:\Users\Lenovo\Desktop\model\dengelenmis_veri_seti.csv'

# DataFrame'i CSV dosyasına kaydetme
resampled_data.to_csv(new_file_path, index=False, header=True)

print(f"Dengelenmiş veri seti '{new_file_path}' dosyasına kaydedildi.")
